1.npm install exoress
2 npm init(简历packge.json文件)、】
3.创建一个文件 input.txt（里面内容“随便写点东西”）
4.创建 main.js 文件, 代码如下：（任选一种，或两种都试一下，体验不同方式的执行结果）
   示例代码一：（阻塞式）
      var fs = require("fs");
      var data = fs.readFileSync('input.txt');
      console.log(data.toString());
      console.log("程序执行结束!");
  示例代码二：（非阻塞式）
      var fs = require("fs");
      fs.readFile('input.txt', function (err, data) {
          if (err) return console.error(err);
          console.log(data.toString());
      });
      console.log("程序执行结束!");
5.执行代码：
    $ node main.js
    执行结果：
    示例代码一：
       随便写点东西

       程序执行结束!
    示例代码二：
      程序执行结束!


      随便写点东西
//  总结：上两个实例我们了解了阻塞与非阻塞调用的不同。示例一在文件读取完后才执行完程序。 实例二我们不需要等待文件读取完，这样就可以在读取文件时同时执行接下来的代码，大大提高了程序的性能。
//      因此，阻塞是按顺序执行的，而非阻塞是不需要按顺序的，所以如果需要处理回调函数的参数，我们就需要写在回调函数内。
